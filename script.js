function toggleCategory(header) {
    const content = header.nextElementSibling;
    const arrow = header.querySelector(".arrow");

    document
      .querySelectorAll(".category-content.open")
      .forEach((openContent) => {
        if (openContent !== content) {
          openContent.classList.remove("open");
          openContent.previousElementSibling
            .querySelector(".arrow")
            .classList.remove("open");
        }
      });

    content.classList.toggle("open");
    arrow.classList.toggle("open");
    
    // –°–ø—Ä–∏ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–∏—è —Å–∫—Ä–æ–ª
    event.preventDefault();
        history.replaceState(null, null, window.location.pathname);
}

function switchTab(tabName) {
    document
      .querySelectorAll(".category-content.open")
      .forEach((content) => {
        content.classList.remove("open");
        content.previousElementSibling
          .querySelector(".arrow")
          .classList.remove("open");
      });

    document
      .querySelectorAll(".tab-button")
      .forEach((btn) => btn.classList.remove("active"));
    document
      .querySelectorAll(".tab-content")
      .forEach((content) => content.classList.remove("active"));

    event.target.classList.add("active");
    document.getElementById(tabName).classList.add("active");
}

function scrollToTop() {
    window.scrollTo({
      top: 0,
      behavior: "smooth",
    });
}

window.addEventListener("scroll", function () {
    const button = document.getElementById("backToTop");
    if (button) {
      if (window.pageYOffset > 300) {
        button.classList.add("show");
      } else {
        button.classList.remove("show");
      }
    }
});

// FAQ –§–£–ù–ö–¶–ò–û–ù–ê–õ–ù–û–°–¢
function toggleFAQ(button) {
    const answer = button.nextElementSibling;
    const arrow = button.querySelector('.faq-arrow');
    
    // –ó–∞—Ç–≤–æ—Ä–∏ –¥—Ä—É–≥–∏ –æ—Ç–≤–æ—Ä–µ–Ω–∏ FAQ
    document.querySelectorAll('.faq-answer.open').forEach(item => {
        if (item !== answer) {
            item.classList.remove('open');
            item.previousElementSibling.classList.remove('active');
            item.previousElementSibling.querySelector('.faq-arrow').classList.remove('rotated');
        }
    });
    
    // Toggle —Ç–µ–∫—É—â–∏—è FAQ
    answer.classList.toggle('open');
    button.classList.toggle('active');
    arrow.classList.toggle('rotated');
}

// –ê–í–¢–û–ú–ê–¢–ò–ß–ù–û –ì–ï–ù–ï–†–ò–†–ê–ù–ï –ù–ê FAQ SCHEMA
function generateSchemaFromHTML() {
    const faqSection = document.querySelector('.faq-section');
    if (!faqSection) return;
    
    const faqItems = faqSection.querySelectorAll('.faq-item');
    if (faqItems.length === 0) return;
    
    const mainEntity = [];
    
    faqItems.forEach(item => {
        const question = item.querySelector('.faq-question span:first-child');
        const answer = item.querySelector('.faq-answer p');
        
        if (question && answer) {
            mainEntity.push({
                "@type": "Question",
                "name": question.textContent.trim(),
                "acceptedAnswer": {
                    "@type": "Answer",
                    "text": answer.textContent.trim()
                }
            });
        }
    });
    
    if (mainEntity.length > 0) {
        const schema = {
            "@context": "https://schema.org",
            "@type": "FAQPage",
            "mainEntity": mainEntity
        };
        
        // –°—ä–∑–¥–∞–π –∏–ª–∏ –æ–±–Ω–æ–≤–∏ schema script tag
        let schemaScript = document.getElementById('faq-schema');
        if (!schemaScript) {
            schemaScript = document.createElement('script');
            schemaScript.type = 'application/ld+json';
            schemaScript.id = 'faq-schema';
            document.head.appendChild(schemaScript);
        }
        
        schemaScript.textContent = JSON.stringify(schema, null, 2);
    }
}

document.addEventListener("DOMContentLoaded", function () {
    // –°—ä—â–µ—Å—Ç–≤—É–≤–∞—â –∫–æ–¥ –∑–∞ —Å–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ —Ç–∞–±–ª–∏—Ü–∏
    document.querySelectorAll(".product-table tbody").forEach((tbody) => {
        if (tbody.closest(".supplements")) {
            return;
        }
        const rows = Array.from(tbody.querySelectorAll("tr"));
        const productRows = rows.filter((row) => {
            const firstCell = row.querySelector("td");
            return firstCell && !firstCell.hasAttribute("colspan");
        });
        productRows.sort((a, b) => {
            const nameA = a.querySelector("td").textContent.trim().toLowerCase();
            const nameB = b.querySelector("td").textContent.trim().toLowerCase();
            return nameA.localeCompare(nameB, "bg");
        });
        productRows.forEach((row) => tbody.appendChild(row));
    });

    // –ü–û–ü–†–ê–í–ï–ù –¢–û–° –ö–û–î
    const tocList = document.getElementById('toc-list');
    if (tocList) {
        const headings = document.querySelectorAll('.product-section h2, .product-section h3');
        headings.forEach((heading, index) => {
            if (!heading.id) {
                heading.id = `section-${index}`;
            }
            const li = document.createElement('li');
            const a = document.createElement('a');
            a.href = `#${heading.id}`;
            a.textContent = heading.textContent;
            if (heading.tagName === 'H3') {
                li.style.marginLeft = '20px';
                li.style.fontSize = '0.95rem';
            }
            li.appendChild(a);
            tocList.appendChild(li);
        });
        
        const toc = document.querySelector('.table-of-contents');
        const tocTitle = toc.querySelector('h3');
        tocTitle.innerHTML = 'üìñ –°—ä–¥—ä—Ä–∂–∞–Ω–∏–µ';
        
        // –°—ä–∑–¥–∞–≤–∞–º–µ —Å–∞–º–æ –µ–¥–∏–Ω readMore –±—É—Ç–æ–Ω
        const readMoreBtn = document.createElement('button');
        readMoreBtn.className = 'toc-read-more';
        readMoreBtn.textContent = '–ü—Ä–æ—á–µ—Ç–∏ —Ü—è–ª–æ—Ç–æ —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ';
        tocTitle.parentNode.insertBefore(readMoreBtn, tocList);
        
        // –°—ä–∑–¥–∞–≤–∞–º–µ —Å–∞–º–æ –µ–¥–∏–Ω hide –±—É—Ç–æ–Ω
        const hideBtn = document.createElement('button');
        hideBtn.className = 'toc-hide';
        hideBtn.textContent = '–°–∫—Ä–∏–π —Å—ä–¥—ä—Ä–∂–∞–Ω–∏–µ—Ç–æ';
        hideBtn.style.display = 'none';
        tocTitle.parentNode.insertBefore(hideBtn, tocList.nextSibling);
        
        // –°–∫—Ä–∏–≤–∞–º–µ TOC –ø–æ –ø–æ–¥—Ä–∞–∑–±–∏—Ä–∞–Ω–µ
        tocList.style.maxHeight = '0';
        tocList.style.overflow = 'hidden';
        tocList.style.opacity = '0';
        tocList.style.transition = 'max-height 0.3s ease-out, opacity 0.3s ease-out';
        
        // –°–ê–ú–û –ï–î–ò–ù addEventListener –∑–∞ readMore
        readMoreBtn.addEventListener('click', function() {
            tocList.style.maxHeight = tocList.scrollHeight + 'px';
            tocList.style.opacity = '1';
            readMoreBtn.style.display = 'none';  // –°–∫—Ä–∏–π readMore
            hideBtn.style.display = 'block';     // –ü–æ–∫–∞–∂–∏ hide
        });
        
        // –°–ê–ú–û –ï–î–ò–ù addEventListener –∑–∞ hide  
        hideBtn.addEventListener('click', function() {
            tocList.style.maxHeight = '0';
            tocList.style.opacity = '0';
            hideBtn.style.display = 'none';      // –°–∫—Ä–∏–π hide
            readMoreBtn.style.display = 'block'; // –ü–æ–∫–∞–∂–∏ readMore
        });
    }
    
    // –ù–û–í–û - –≥–µ–Ω–µ—Ä–∏—Ä–∞–Ω–µ –Ω–∞ FAQ schema
    generateSchemaFromHTML();
});